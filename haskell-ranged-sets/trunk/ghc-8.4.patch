diff --git a/Data/Ranged/RangedSet.hs.orig b/Data/Ranged/RangedSet.hs
index eca86ef..922b1d6 100644
--- a/Data/Ranged/RangedSet.hs.orig
+++ b/Data/Ranged/RangedSet.hs
@@ -58,7 +58,6 @@ module Data.Ranged.RangedSet (
 
 import Data.Ranged.Boundaries
 import Data.Ranged.Ranges
-import Data.Monoid
 
 import Data.List
 import Test.QuickCheck
@@ -72,8 +71,10 @@ infixl 5 -<=-, -<-, -?-
 newtype DiscreteOrdered v => RSet v = RSet {rSetRanges :: [Range v]}
    deriving (Eq, Show)
 
+instance DiscreteOrdered a => Semigroup (RSet a) where
+   (<>) = rSetUnion
+
 instance DiscreteOrdered a => Monoid (RSet a) where
-    mappend = rSetUnion
     mempty = rSetEmpty
 
 -- | Determine if the ranges in the list are both in order and non-overlapping.
