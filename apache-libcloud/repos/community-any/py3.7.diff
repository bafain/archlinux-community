diff -u -r apache-libcloud-2.3.0/libcloud/common/dimensiondata.py apache-libcloud-2.3.0-py3.7/libcloud/common/dimensiondata.py
--- apache-libcloud-2.3.0/libcloud/common/dimensiondata.py	2017-04-11 00:03:27.000000000 +0200
+++ apache-libcloud-2.3.0-py3.7/libcloud/common/dimensiondata.py	2018-07-29 17:14:21.030942695 +0200
@@ -526,7 +526,7 @@
                                              method).object
         yield resp
         if len(resp) <= 0:
-            raise StopIteration
+            return
 
         pcount = resp.get('pageCount')  # pylint: disable=no-member
         psize = resp.get('pageSize')  # pylint: disable=no-member
diff -u -r apache-libcloud-2.3.0/libcloud/compute/drivers/azure.py apache-libcloud-2.3.0-py3.7/libcloud/compute/drivers/azure.py
--- apache-libcloud-2.3.0/libcloud/compute/drivers/azure.py	2017-04-24 04:18:37.000000000 +0200
+++ apache-libcloud-2.3.0-py3.7/libcloud/compute/drivers/azure.py	2018-07-29 17:14:21.034276037 +0200
@@ -1435,7 +1435,7 @@
 
         return response
 
-    def _perform_post(self, path, body, response_type=None, async=False):
+    def _perform_post(self, path, body, response_type=None, is_async=False):
         request = AzureHTTPRequest()
         request.method = 'POST'
         request.host = AZURE_SERVICE_MANAGEMENT_HOST
@@ -1447,7 +1447,7 @@
 
         return response
 
-    def _perform_put(self, path, body, response_type=None, async=False):
+    def _perform_put(self, path, body, response_type=None, is_async=False):
         request = AzureHTTPRequest()
         request.method = 'PUT'
         request.host = AZURE_SERVICE_MANAGEMENT_HOST
@@ -1459,7 +1459,7 @@
 
         return response
 
-    def _perform_delete(self, path, async=False):
+    def _perform_delete(self, path, is_async=False):
         request = AzureHTTPRequest()
         request.method = 'DELETE'
         request.host = AZURE_SERVICE_MANAGEMENT_HOST
@@ -1470,7 +1470,7 @@
 
         self.raise_for_response(response, 202)
 
-        if async:
+        if is_async:
             return self._parse_response_for_async_op(response)
 
     def _perform_request(self, request):
diff -u -r apache-libcloud-2.3.0/libcloud/storage/drivers/dummy.py apache-libcloud-2.3.0-py3.7/libcloud/storage/drivers/dummy.py
--- apache-libcloud-2.3.0/libcloud/storage/drivers/dummy.py	2017-04-11 00:03:27.000000000 +0200
+++ apache-libcloud-2.3.0-py3.7/libcloud/storage/drivers/dummy.py	2018-07-29 17:14:21.034276037 +0200
@@ -44,8 +44,6 @@
             yield self._get_chunk(self._chunk_len)
             i += 1
 
-        raise StopIteration
-
     def _get_chunk(self, chunk_len):
         chunk = [str(x) for x in random.randint(97, 120)]
         return chunk
diff -u -r apache-libcloud-2.3.0/libcloud/utils/py3.py apache-libcloud-2.3.0-py3.7/libcloud/utils/py3.py
--- apache-libcloud-2.3.0/libcloud/utils/py3.py	2018-02-02 08:53:42.000000000 +0100
+++ apache-libcloud-2.3.0-py3.7/libcloud/utils/py3.py	2018-07-29 17:15:20.421118700 +0200
@@ -42,6 +42,7 @@
 PY2 = False
 PY27 = False
 PY3 = False
+PY37 = False
 
 if sys.version_info >= (2, 0) and sys.version_info < (3, 0):
     PY2 = True
@@ -52,6 +53,9 @@
 if sys.version_info >= (3, 0):
     PY3 = True
 
+if sys.version_info >= (3, 7):
+    PY37 = True
+
 if PY2_pre_279:
     try:
         from backports.ssl_match_hostname import match_hostname, CertificateError  # NOQA
@@ -71,7 +75,7 @@
     import urllib.parse as urlparse
     import xmlrpc.client as xmlrpclib
 
-    from urllib.parse import quote as urlquote
+    from urllib.parse import quote as _urlquote
     from urllib.parse import unquote as urlunquote
     from urllib.parse import urlencode as urlencode
     from os.path import relpath
@@ -124,6 +128,15 @@
     def tostring(node):
         return ET.tostring(node, encoding='unicode')
 
+    if PY37:
+        def urlquote(s, safe='/'):
+            res = _urlquote(s, safe)
+            if '~' not in safe:
+                res = res.replace('~', '%7E')
+            return res
+    else:
+        urlquote = _urlquote
+
     def hexadigits(s):
         # s needs to be a byte string.
         return [format(x, "x") for x in s]
